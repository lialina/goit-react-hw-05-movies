{"version":3,"sources":["components/Cast/Cast.js"],"names":["Status","Cast","movieId","useParams","useState","cast","setCast","status","setStatus","error","setError","useEffect","fetchMovieActors","then","result","console","log","catch","message","map","actor","src","profile_path","alt","width","name","character","id"],"mappings":"yOAMMA,EACE,OADFA,EAEM,WAFNA,EAGM,WAGG,SAASC,IACtB,IAAOC,EAAWC,cAAXD,QACP,EAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAASJ,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAiBA,OAdAC,qBAAU,WACRC,YAAiBV,GAChBW,MAAK,SAAAC,GAAM,OAAIA,EAAOT,QACtBQ,MAAK,SAAAR,GACJC,EAAQD,GACRG,EAAUR,GACVe,QAAQC,IAAIX,MAEbY,OAAM,SAAAR,GACLC,EAASD,GACTD,EAAUR,QAEX,CAACE,IAGF,qCACGK,IAAWP,GAAmB,cAAC,IAAD,CAAakB,QAAST,EAAMS,UAC1DX,IAAWP,GACZ,6BACCK,EAAKc,KAAI,SAACC,GAAD,OACV,6BACE,+BACE,qBAAKC,IAAG,8CAAyCD,EAAME,cAAgBC,IAAI,qBAAqBC,MAAM,QACtG,4BAAIJ,EAAMK,OACV,4CAAeL,EAAMM,iBAJhBN,EAAMO","file":"static/js/cast.91e06ddc.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieActors } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function Cast() {\r\n  const {movieId} = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchMovieActors(movieId)\r\n    .then(result => result.cast)\r\n    .then(cast => {\r\n      setCast(cast);\r\n      setStatus(Status.RESOLVED);\r\n      console.log(cast);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      {status === Status.RESOLVED && \r\n      <ul>\r\n      {cast.map((actor) => \r\n      <li key={actor.id}>\r\n        <ul>\r\n          <img src={`https://image.tmdb.org/t/p/original/${actor.profile_path}`} alt=\"Photo of the actor\" width=\"120\"/>\r\n          <p>{actor.name}</p>\r\n          <p>Character: {actor.character}</p>\r\n        </ul>\r\n      </li>\r\n      )}\r\n      </ul>\r\n      }\r\n      \r\n\r\n    </>\r\n  )\r\n  \r\n}"],"sourceRoot":""}