{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Status","Reviews","movieId","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","fetchMovieReviews","then","data","results","length","console","log","catch","message","map","review","author","content","id"],"mappings":"yOAKMA,EACE,OADFA,EAEM,WAFNA,EAGG,QAHHA,EAIM,WAGG,SAASC,IACtB,IAAOC,EAAWC,cAAXD,QACP,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAASJ,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WACRC,YAAkBV,GACjBW,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WAClBF,MAAK,SAAAE,GACmB,IAAnBA,EAAQC,QAIZC,QAAQC,IAAIH,GACZT,EAAWS,GACXP,EAAUR,IALRQ,EAAUR,MAObmB,OAAM,SAAAV,GACLC,EAASD,GACTD,EAAUR,QAEX,CAACE,IAGF,qCACGK,IAAWP,GAAmB,cAAC,IAAD,CAAaoB,QAASX,EAAMW,UAE1Db,IAAWP,GACZ,2EAECO,IAAWP,GACZ,6BACGK,EAAQgB,KAAI,SAACC,GAAD,OACb,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAOG","file":"static/js/reviews.ac484157.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieReviews } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  EMPTY: 'empty',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function Reviews() {\r\n  const {movieId} = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews(movieId)\r\n    .then(data => data.results)\r\n    .then(results => {\r\n      if (results.length === 0) {\r\n        setStatus(Status.EMPTY);\r\n        return;\r\n      }\r\n      console.log(results);\r\n      setReviews(results);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      \r\n      {status === Status.EMPTY && \r\n      <div>We don't have any reviews for this movie</div>}\r\n\r\n      {status === Status.RESOLVED && \r\n      <ul>\r\n        {reviews.map((review) => \r\n        <li key={review.id}>\r\n          <p>Author: {review.author}</p>\r\n          <p>{review.content}</p>\r\n        </li>)}\r\n        </ul>\r\n      // <div>It is Reviews of Movie with ID #{movieId}</div>\r\n      }\r\n    </>\r\n  )\r\n  \r\n}"],"sourceRoot":""}