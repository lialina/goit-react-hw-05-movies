{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Navigation/Navigation.js","services/movies-api.js","components/SearchError/SearchError.js","views/HomePage.js","views/MoviesPage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","views/NotFoundView.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","Navigation","exact","link","activeClassName","activeLink","to","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Error","SearchError","message","role","Status","HomePage","useState","status","setStatus","error","setError","trendingMovies","setTrendingMovies","useEffect","then","data","results","catch","map","movie","id","title","MoviesPage","Cast","movieId","useParams","cast","setCast","console","log","fetchMovieActors","result","Reviews","MovieDetailsPage","useRouteMatch","path","setMovie","fetchMovieDetailsById","src","poster_path","alt","width","overview","genres","genre","name","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d2dc9df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2G3g4\",\"activeLink\":\"Navigation_activeLink__FAiEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2jQKL\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink exact className={s.link} activeClassName={s.activeLink} to=\"/\">\r\n      Home\r\n    </NavLink>\r\n    <NavLink className={s.link} activeClassName={s.activeLink} to=\"/movies\">\r\n      Movies\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '531a27e0122c94d8ab2e66598c1071a6';\r\n\r\nasync function fetchWithErrorHandling(url = '', config ={}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok \r\n    ? await response.json() \r\n    : new Error('Possibly server error, please try again');\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n}\r\n\r\nexport function fetchQueryMovies(query) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\r\n}\r\n\r\nexport function fetchMovieDetailsById(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport function fetchMovieActors(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport function fetchMovieReviews(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\r\n}\r\n\r\n\r\n// export const fetchMovies = async function() {\r\n//   return fetch(\r\n//     `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n//   ).then(response => {\r\n//     if (response.ok) {\r\n//       return response.json();\r\n//     };\r\n\r\n//     return Promise.reject(\r\n//       new Error('Possibly server error, please try again'),\r\n//     );\r\n//   });\r\n// };","import PropTypes from 'prop-types';\r\n\r\nfunction SearchError({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SearchError;","import { useState, useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { fetchTrendingMovies } from '../services/movies-api';\r\nimport SearchError from '../components/SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function HomePage() {\r\n  // const { url } = useRouteMatch();\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  // const query = 'dog';\r\n\r\n  useEffect(() => {\r\n    fetchTrendingMovies()\r\n    .then(data => data.results)\r\n    .then(results => {\r\n      setTrendingMovies(results);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n  <div>\r\n    <h1>Hi, I am HomePage</h1>\r\n    <h2>Trending today</h2>\r\n    <div>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      {status === Status.RESOLVED && <ul>{trendingMovies.map((movie) => \r\n        <li key={movie.id}>\r\n          <Link to={`movies/${movie.id}`}>{movie.title}</Link>\r\n        </li>)}\r\n      </ul>}\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n","export default function MoviesPage() {\r\n  return <div>Hi, I'm MoviesPage</div>\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieActors } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function Cast() {\r\n  const {movieId} = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  console.log(cast);\r\n\r\n  useEffect(() => {\r\n    fetchMovieActors(movieId)\r\n    .then(result => {\r\n      setCast(result);\r\n      // setStatus(Status.RESOLVED);\r\n      console.log(result);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      {/* {cast && \r\n      <ul>\r\n      {cast.map((actor) => {\r\n      <li>{actor.id}</li>\r\n      })}\r\n      </ul>} */}\r\n      \r\n      <>It is Cast of Movie with ID #{movieId}</>\r\n    </>\r\n  )\r\n  \r\n}","import { useParams } from 'react-router-dom';\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  return <div>It is Reviews of Movie with ID #{movieId}</div>\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch, NavLink } from 'react-router-dom';\r\nimport { fetchMovieDetailsById, fetchMovieActors } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [movie, setMovie] =  useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetailsById(movieId)\r\n    .then(result => {\r\n      setMovie(result);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n    <Link to=\"/\">Go back</Link>\r\n    <h2>Я страничка с детальным описанием фильма ${movieId}</h2>\r\n    {status === Status.REJECTED && <SearchError message={error.message} />}\r\n    {status === Status.RESOLVED &&\r\n    <>\r\n      <div>\r\n        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"Movie poster\" width={250}/>\r\n        <h3>{movie.title}</h3>\r\n        <p>User Score: %</p>\r\n        <h4>Overview</h4>\r\n        <p>{movie.overview}</p>\r\n        <h5>Genres</h5>\r\n        <ul>{movie.genres.map((genre) =>\r\n          <li key={genre.id}>{genre.name}</li>\r\n        )}</ul>\r\n      </div>\r\n      <hr />\r\n\r\n      <div>\r\n        <p>Additional information</p>\r\n        <ul>\r\n          <li><NavLink to={`${url}/cast`}>Cast</NavLink></li>\r\n          <li><NavLink to={`${url}/reviews`}>Reviews</NavLink></li>\r\n        </ul>\r\n      </div>\r\n      </>\r\n    }\r\n\r\n    <Route path={`${path}/:movieId/cast`}>\r\n      <Cast />\r\n    </Route>  \r\n\r\n    <Route path={`${path}/:movieId/reviews`}>\r\n      <Reviews />\r\n    </Route> \r\n    </>\r\n  );\r\n}","export default function NotFoundView() {\r\n  return <h1>404 Page not found</h1>\r\n}","import { Switch, Route } from 'react-router-dom';\r\nimport Container from './components/Container/Container';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport HomePage from './views/HomePage';\r\nimport MoviesPage from './views/MoviesPage';\r\nimport MovieDetailsPage from './components/MovieDetailsPage/MovieDetailsPage';\r\nimport NotFoundView from './views/NotFoundView';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n  <Container>\r\n    <Navigation />\r\n\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <HomePage />\r\n      </Route>\r\n\r\n      <Route path=\"/movies\" exact>\r\n        <MoviesPage />\r\n      </Route>\r\n\r\n      <Route path=\"/movies/:movieId\">\r\n        <MovieDetailsPage />\r\n      </Route>\r\n\r\n      <Route>\r\n        <NotFoundView />\r\n      </Route>\r\n    </Switch>\r\n  </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}