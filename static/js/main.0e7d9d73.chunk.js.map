{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Navigation/Navigation.js","services/movies-api.js","components/SearchError/SearchError.js","views/HomePage/HomePage.js","views/MoviesPage/MoviesPage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","views/NotFoundView/NotFoundView.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","Navigation","exact","link","activeClassName","activeLink","to","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Error","SearchError","message","role","Status","HomePage","useState","status","setStatus","error","setError","trendingMovies","setTrendingMovies","useEffect","then","data","results","catch","map","movie","id","title","MoviesPage","query","setQuery","input","setInput","movies","setMovies","queryInputId","shortid","generate","reset","fetchQueryMovies","onSubmit","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","release_date","slice","autoClose","Cast","movieId","useParams","cast","setCast","fetchMovieActors","result","console","log","actor","src","profile_path","alt","width","character","Reviews","reviews","setReviews","fetchMovieReviews","length","review","author","content","MovieDetailsPage","useRouteMatch","path","setMovie","fetchMovieDetailsById","poster_path","overview","genres","genre","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e7d9d73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2G3g4\",\"activeLink\":\"Navigation_activeLink__FAiEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2jQKL\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <>\r\n  <nav>\r\n    <NavLink exact className={s.link} activeClassName={s.activeLink} to=\"/\">\r\n      Home\r\n    </NavLink>\r\n    <NavLink className={s.link} activeClassName={s.activeLink} to=\"/movies\">\r\n      Movies\r\n    </NavLink>\r\n  </nav>\r\n  <hr />\r\n  </>\r\n  \r\n  \r\n);\r\n\r\nexport default Navigation;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '531a27e0122c94d8ab2e66598c1071a6';\r\n\r\nasync function fetchWithErrorHandling(url = '', config ={}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok \r\n    ? await response.json() \r\n    : new Error('Possibly server error, please try again');\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n}\r\n\r\nexport function fetchQueryMovies(query) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\r\n}\r\n\r\nexport function fetchMovieDetailsById(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport function fetchMovieActors(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport function fetchMovieReviews(movieId) {\r\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\r\n}\r\n\r\n\r\n// export const fetchMovies = async function() {\r\n//   return fetch(\r\n//     `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n//   ).then(response => {\r\n//     if (response.ok) {\r\n//       return response.json();\r\n//     };\r\n\r\n//     return Promise.reject(\r\n//       new Error('Possibly server error, please try again'),\r\n//     );\r\n//   });\r\n// };","import PropTypes from 'prop-types';\r\n\r\nfunction SearchError({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SearchError;","import { useState, useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { fetchTrendingMovies } from '../../services/movies-api';\r\nimport SearchError from '../../components/SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function HomePage() {\r\n  // const { url } = useRouteMatch();\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  // const query = 'dog';\r\n\r\n  useEffect(() => {\r\n    fetchTrendingMovies()\r\n    .then(data => data.results)\r\n    .then(results => {\r\n      setTrendingMovies(results);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    })\r\n  }, [])\r\n  \r\n  return (\r\n  <div>\r\n    <h2>Trending today</h2>\r\n    <div>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      {status === Status.RESOLVED && <ul>{trendingMovies.map((movie) => \r\n        <li key={movie.id}>\r\n          <Link to={`movies/${movie.id}`}>{movie.title}</Link>\r\n        </li>)}\r\n      </ul>}\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport shortid from 'shortid';\r\nimport { fetchQueryMovies } from '../../services/movies-api';\r\nimport SearchError from '../../components/SearchError/SearchError';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function MoviesPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [input, setInput] = useState('')\r\n  const [movies, setMovies] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  const queryInputId = shortid.generate();\r\n\r\n  const handleChange = event => {\r\n    setStatus(Status.IDLE);\r\n    setInput(event.currentTarget.value.toLowerCase());\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (input.trim() === '') {\r\n      toast.error('Please, enter your query');\r\n      return;\r\n    }\r\n    setQuery(input);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    fetchQueryMovies(query)\r\n      .then(data => data.results)\r\n      .then(results => {\r\n        setMovies(results);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [query])\r\n\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}> \r\n      <input \r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search movies\"\r\n        name=\"input\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        id={queryInputId}\r\n      />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n\r\n    {status === Status.REJECTED && <SearchError message={error.message} />}\r\n    {status === Status.RESOLVED && \r\n    <ul>\r\n      {movies.map((movie) =>\r\n      <li key={movie.id}>\r\n        <Link to={`movies/${movie.id}`}>\r\n        {movie.title} {movie.release_date && <>({movie.release_date.slice(0, 4)})</>}\r\n          </Link>\r\n        </li>)}\r\n    </ul>\r\n    }\r\n    \r\n    <ToastContainer autoClose={5000} />\r\n    </>\r\n\r\n    \r\n    // <div>Hi, I'm MoviesPage</div>\r\n  )\r\n}\r\n","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieActors } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function Cast() {\r\n  const {movieId} = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchMovieActors(movieId)\r\n    .then(result => result.cast)\r\n    .then(cast => {\r\n      setCast(cast);\r\n      setStatus(Status.RESOLVED);\r\n      console.log(cast);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      {status === Status.RESOLVED && \r\n      <ul>\r\n      {cast.map((actor) => \r\n      <li key={actor.id}>\r\n        <ul>\r\n          <img src={`https://image.tmdb.org/t/p/original/${actor.profile_path}`} alt=\"Photo of the actor\" width=\"120\"/>\r\n          <p>{actor.name}</p>\r\n          <p>Character: {actor.character}</p>\r\n        </ul>\r\n      </li>\r\n      )}\r\n      </ul>\r\n      }\r\n      \r\n\r\n    </>\r\n  )\r\n  \r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieReviews } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  EMPTY: 'empty',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function Reviews() {\r\n  const {movieId} = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews(movieId)\r\n    .then(data => data.results)\r\n    .then(results => {\r\n      if (results.length === 0) {\r\n        setStatus(Status.EMPTY);\r\n        return;\r\n      }\r\n      console.log(results);\r\n      setReviews(results);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.REJECTED && <SearchError message={error.message} />}\r\n      \r\n      {status === Status.EMPTY && \r\n      <div>We don't have any reviews for this movie</div>}\r\n\r\n      {status === Status.RESOLVED && \r\n      <ul>\r\n        {reviews.map((review) => \r\n        <li key={review.id}>\r\n          <p>Author: {review.author}</p>\r\n          <p>{review.content}</p>\r\n        </li>)}\r\n        </ul>\r\n      // <div>It is Reviews of Movie with ID #{movieId}</div>\r\n      }\r\n    </>\r\n  )\r\n  \r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch, NavLink } from 'react-router-dom';\r\nimport { fetchMovieDetailsById, fetchMovieActors } from '../../services/movies-api';\r\nimport SearchError from '../SearchError/SearchError';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const [movie, setMovie] =  useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetailsById(movieId)\r\n    .then(result => {\r\n      setMovie(result);\r\n      setStatus(Status.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      setError(error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n    <Link to=\"/\">Go back</Link>\r\n    <h2>Я страничка с детальным описанием фильма ${movieId}</h2>\r\n    {status === Status.REJECTED && <SearchError message={error.message} />}\r\n    {status === Status.RESOLVED &&\r\n    <>\r\n      <div>\r\n        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"Movie poster\" width=\"250\"/>\r\n        <h3>{movie.title}</h3>\r\n        <p>User Score: %</p>\r\n        <h4>Overview</h4>\r\n        <p>{movie.overview}</p>\r\n        <h5>Genres</h5>\r\n        <ul>{movie.genres.map((genre) =>\r\n          <li key={genre.id}>{genre.name}</li>\r\n        )}</ul>\r\n      </div>\r\n      <hr />\r\n\r\n      <div>\r\n        <p>Additional information</p>\r\n        <ul>\r\n          <li><NavLink to={`${url}/cast`}>Cast</NavLink></li>\r\n          <li><NavLink to={`${url}/reviews`}>Reviews</NavLink></li>\r\n        </ul>\r\n      </div>\r\n      </>\r\n    }\r\n\r\n    <Route path={`${path}/cast`}>\r\n      <Cast />\r\n    </Route>  \r\n\r\n    <Route path={`${path}/reviews`}>\r\n      <Reviews />\r\n    </Route> \r\n    </>\r\n  );\r\n}","export default function NotFoundView() {\r\n  return <h1>404 Page not found</h1>\r\n}","import { Switch, Route } from 'react-router-dom';\r\nimport Container from './components/Container/Container';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport HomePage from './views/HomePage/HomePage';\r\nimport MoviesPage from './views/MoviesPage/MoviesPage';\r\nimport MovieDetailsPage from './components/MovieDetailsPage/MovieDetailsPage';\r\nimport NotFoundView from './views/NotFoundView/NotFoundView';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n  <Container>\r\n    <Navigation />\r\n\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <HomePage />\r\n      </Route>\r\n\r\n      <Route path=\"/movies\" exact>\r\n        <MoviesPage />\r\n      </Route>\r\n\r\n      <Route path=\"/movies/:movieId\">\r\n        <MovieDetailsPage />\r\n      </Route>\r\n\r\n      <Route>\r\n        <NotFoundView />\r\n      </Route>\r\n    </Switch>\r\n  </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}